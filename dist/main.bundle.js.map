{"version":3,"sources":["webpack:///./src/app/shared/services/index.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/header/header.module.ts","webpack:///./src/app/job-dashboard/job-dashboard.component.ts","webpack:///./src/app/job-dashboard/job-dashboard.module.ts","webpack:///./src/app/job-dashboard/job/job.component.ts","webpack:///./src/app/shared/enums/container-sizes.enum.ts","webpack:///./src/app/shared/enums/frequency.enum.ts","webpack:///./src/app/shared/enums/index.ts","webpack:///./src/app/shared/interfaces/index.ts","webpack:///./src/app/shared/services/actions.service.ts","webpack:///./src/app/shared/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/header/header.component.css","webpack:///./src/app/job-dashboard/job-dashboard.component.css","webpack:///./src/app/job-dashboard/job/job.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/header/header.component.html","webpack:///./src/app/job-dashboard/job-dashboard.component.html","webpack:///./src/app/job-dashboard/job/job.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["export { StateManagerService } from 'sassy-state-manager-ng2';\nexport { ActionsService } from './actions.service';\nexport { DataService } from './data.service';\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/index.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 358;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 358\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'js-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport {\n  StateManagerService,\n  DataService,\n  ActionsService\n } from './shared/services';\n\nimport { AppComponent } from './app.component';\nimport { HeaderModule } from './header/header.module';\nimport { JobDashboardModule } from './job-dashboard/job-dashboard.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    HeaderModule,\n    JobDashboardModule\n  ],\n  providers: [\n    StateManagerService,\n    DataService,\n    ActionsService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n  /**\n   * Creates an instance of AppModule.\n   * \n   * @param {StateManagerService} stateManager\n   * \n   * @memberOf AppModule\n   */\n  constructor(private stateManager: StateManagerService) {\n    /** Job Scheduler Model */\n    stateManager.createModel('JobScheduler');\n    stateManager.setModel('JobScheduler', {});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'js-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/header/header.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [HeaderComponent],\n  declarations: [HeaderComponent]\n})\nexport class HeaderModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/header/header.module.ts","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { DataService, ActionsService, StateManagerService } from '../shared/services';\nimport { Job } from '../shared/interfaces/job';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'js-job-dashboard',\n  templateUrl: './job-dashboard.component.html',\n  styleUrls: ['./job-dashboard.component.css']\n})\nexport class JobDashboardComponent implements OnInit, OnDestroy {\n  public jobs: Job[];\n  public hasJobs: boolean;\n  private subscription: Subscription;\n\n  /**\n   * Creates an instance of JobDashboardComponent.\n   *\n   * @param {DataService} dataService\n   * @param {ActionsService} actions\n   * @param {StateManagerService} stateManager\n   *\n   * @memberOf JobDashboardComponent\n   */\n  constructor(\n    private dataService: DataService,\n    private actions: ActionsService,\n    private stateManager: StateManagerService) {\n      this.hasJobs = false;\n    }\n\n\n  /**\n   *\n   *\n   *\n   * @memberOf JobDashboardComponent\n   */\n  ngOnInit() {\n    // get all saved jobs\n    this.getTheJobsData();\n\n    // subscribe to Job Scheduler model\n    this.subscription = <Subscription>this.stateManager.getModel('JobScheduler')\n      .subscribe(jobs => {\n        this.jobs = jobs;\n        this.hasJobs = (jobs.length > 0) ? false : true;\n      });\n  }\n\n\n  /**\n   * Add a job to the jobs model\n   *\n   *\n   * @memberOf JobDashboardComponent\n   */\n  public addJob() {\n    let new_job: Job = {\n      name: 'Unnamed',\n      container_size: 0,\n      frequency: 0,\n      last_run: 'NEVER',\n      next_due: new Date().toString(),\n      command: null\n    }\n    let new_jobs = this.jobs.slice(0);\n\n    new_jobs.push(new_job);\n\n    this.actions.updateJobs(new_jobs);\n  }\n\n\n  /**\n   * Remove a job for the jobs model\n   *\n   * @public\n   * @param {any} i\n   *\n   * @memberOf JobDashboardComponent\n   */\n  public removeJob(i) {\n    let new_jobs = this.jobs.slice(0);\n    new_jobs.splice(i, 1);\n    this.actions.updateJobs(new_jobs);\n  }\n\n\n  /**\n   * clean up subscription\n   *\n   *\n   * @memberOf JobDashboardComponent\n   */\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n\n  /*********************************\n   * private method\n   *********************************/\n\n  /**\n   *\n   *\n   * @private\n   *\n   * @memberOf JobDashboardComponent\n   */\n  private getTheJobsData() {\n    this.dataService.getJobsData()\n      .subscribe(data => {\n        this.stateManager.setModel('JobScheduler', data.jobs);\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/job-dashboard/job-dashboard.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { JobDashboardComponent } from './job-dashboard.component';\nimport { JobComponent } from './job/job.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [JobDashboardComponent, JobComponent],\n  exports: [JobDashboardComponent]\n})\nexport class JobDashboardModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/job-dashboard/job-dashboard.module.ts","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter } from '@angular/core';\nimport { Job, Option } from '../../shared/interfaces';\nimport { Frequency, ContainerSizes } from '../../shared/enums';\n\n\n@Component({\n  selector: 'js-job',\n  templateUrl: './job.component.html',\n  styleUrls: ['./job.component.css']\n})\nexport class JobComponent implements OnInit {\n  @Input() job: Job;\n  @Output() delete: EventEmitter<any> = new EventEmitter();\n\n  public containerSizes: Option[];\n  public frequency: Option[];\n  public lastRun: string;\n  public isEditMode: boolean;\n  public jobDate: Date;\n  public militaryTimes: Array<string>;\n\n\n  constructor() {\n    this.containerSizes = [];\n    this.frequency = [];\n    this.isEditMode = false;\n    this.jobDate = new Date();\n    this.militaryTimes = [\n      \"01:30\",\n      \"02:00\",\n      \"02:30\",\n      \"03:00\",\n      \"03:30\",\n      \"04:00\",\n      \"04:30\",\n      \"05:00\",\n      \"05:30\",\n      \"06:00\",\n      \"06:30\",\n      \"07:00\",\n      \"07:30\",\n      \"08:00\",\n      \"08:30\",\n      \"09:00\",\n      \"09:30\",\n      \"10:00\",\n      \"10:30\",\n      \"11:00\",\n      \"11:30\",\n      \"12:00\",\n      \"12:30\",\n      \"13:00\",\n      \"13:30\",\n      \"14:00\",\n      \"14:30\",\n      \"15:00\",\n      \"15:30\",\n      \"16:00\",\n      \"16:30\",\n      \"17:00\",\n      \"17:30\",\n      \"18:00\",\n      \"18:30\",\n      \"19:00\",\n      \"19:30\",\n      \"20:00\",\n      \"20:30\",\n      \"21:00\",\n      \"21:30\",\n      \"22:00\",\n      \"22:30\",\n      \"23:00\",\n      \"23:30\"\n    ];\n  }\n\n\n  /**\n   *\n   * \n   * \n   * @memberOf JobComponent\n   */\n  ngOnInit() {\n    // see if a run has been done before\n    this.lastRun = (this.job && this.job.last_run) ? this.job.last_run : 'NEVER';\n\n    this.containerSizes = Object.keys(ContainerSizes).slice(0, 4)\n      .map(size => {\n        let new_size = ContainerSizes[size].split('_').join(' ').toUpperCase();\n        let sizeObj: Option = { selected: false, name: new_size };\n\n        if(parseInt(size) === this.job.container_size) {\n          sizeObj.selected = true;\n        }\n\n        return sizeObj;\n      });\n\n    this.frequency = Object.keys(Frequency).slice(0, 3)\n      .map(fre => {\n        let new_fre = Frequency[fre].split('_').join(' ').toUpperCase();\n        let freObj: Option = { selected: false, name: new_fre };\n\n        if(parseInt(fre) === this.job.frequency) {\n          freObj.selected = true;\n        }\n\n        return freObj;\n      });\n  }\n\n\n  /**\n   * Update the name of the job\n   *\n   * @param {*} event\n   *\n   * @memberOf JobComponent\n   */\n  public updateName(event: any) {\n    this.job.name = event.target.value;\n  }\n\n\n  /**\n   * Turn on edit mode\n   *\n   *\n   * @memberOf JobComponent\n   */\n  public activateEditMode() {\n    this.isEditMode = !this.isEditMode;\n  }\n\n\n  /**\n   * Removes a job\n   *\n   *\n   * @memberOf JobComponent\n   */\n  public removeJob() {\n    this.delete.emit();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/job-dashboard/job/job.component.ts","export enum ContainerSizes {\n    unlimit_stacks,\n    one_stack,\n    two_stacks,\n    three_stacks\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/enums/container-sizes.enum.ts","export enum Frequency {\n    daily,\n    hourly,\n    every_ten_minutes\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/enums/frequency.enum.ts","export { ContainerSizes } from './container-sizes.enum';\nexport { Frequency } from './frequency.enum';\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/enums/index.ts","export { Option } from './option';\nexport { Job } from './job';\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/interfaces/index.ts","import { Injectable } from '@angular/core';\nimport { StateManagerService } from 'sassy-state-manager-ng2';\nimport { Job } from '../interfaces';\n\n@Injectable()\nexport class ActionsService {\n\n  constructor(private stateManager: StateManagerService) { }\n\n  /**\n   * Update the jobs model\n   * \n   * @param {Job[]} jobs\n   * \n   * @memberOf ActionsService\n   */\n  public updateJobs(jobs: Job[] ) {\n    this.stateManager.update('JobScheduler')(state => {\n      return jobs.map(job => {\n        return Object.assign({}, job);\n      })\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/actions.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/map'\n\n@Injectable()\nexport class DataService {\n\n\n  /**\n   * Creates an instance of DataService.\n   *\n   * @param {Http} Http\n   *\n   * @memberOf DataService\n   */\n  constructor(private Http: Http) { }\n\n\n  /**\n   * Retrieve the jobs data\n   *\n   * @returns {Observable<any>}\n   *\n   * @memberOf DataService\n   */\n  public getJobsData(): Observable<any> {\n    let url: string = '../../../assets/jobs.json';\n\n    return this.Http.get(url)\n      .map((response: Response) => {\n        return response.json();\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/data.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 538\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"header {\\n    border-bottom: solid thin lightgrey;\\n}\\n\\nnav {\\n    padding-left: 10px;\\n}\\n\\n.large {\\n    font-size: 40px;\\n}\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/header/header.component.css\n// module id = 539\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"main {\\n    margin: 20px auto auto auto;\\n    width: auto;\\n    max-width: 1000px;\\n    padding: 0 10px;\\n}\\n\\n.js-full-width {\\n    width: 100%;\\n}\\n\\n.large {\\n    font-size: 60px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/job-dashboard/job-dashboard.component.css\n// module id = 540\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".js-wrapper {\\n    width: 95% !important;\\n}\\n\\n.js-border {\\n    border-radius: 10px 10px 10px 10px;\\n    -moz-border-radius: 10px 10px 10px 10px;\\n    -webkit-border-radius: 10px 10px 10px 10px;\\n    border: thin solid #bdbdbd;\\n}\\n\\n.js-top-margin {\\n    margin-top: 8px;\\n    margin-left: 12px;\\n}\\n\\n.js-grey-lighten-2 {\\n    border: #e0e0e0 thin solid;\\n}\\n\\n.js-btn-section {\\n    margin-right: 10px;\\n}\\n\\n.js-btn-section a {\\n    margin: 5px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/job-dashboard/job/job.component.css\n// module id = 541\n// module chunks = 1","module.exports = \"<js-header></js-header>\\n\\n<js-job-dashboard></js-job-dashboard>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 543\n// module chunks = 1","module.exports = \"<header>\\n    <nav class=\\\"deep-purple darken-4 z-depth-0\\\">\\n        <div class=\\\"nav-wrapper\\\">\\n            <a routerLink=\\\"/\\\">\\n                <span class=\\\"brand-logo center-align\\\"><i class=\\\"large material-icons\\\">schedule</i>Job Scheduler</span>\\n            </a>\\n        </div>\\n    </nav>\\n</header>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/header/header.component.html\n// module id = 544\n// module chunks = 1","module.exports = \"<main>\\n\\n  <!-- intro panel section -->\\n  <div *ngIf=\\\"hasJobs\\\" class=\\\"row\\\">\\n    <div class=\\\"col s12\\\">\\n      <div class=\\\"card grey lighten-5\\\">\\n        <div class=\\\"card-content black-text\\\">\\n          <i class=\\\"large material-icons js-full-width center-align\\\">timer</i>\\n          <span class=\\\"card-title center-align\\\">Schedule recurring tasks for your app</span>\\n          <p class=\\\"center-align\\\">Job Scheduler lets you add jobs which are executed at regular intervals.</p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- jobs section -->\\n  <div class=\\\"row\\\">\\n    <js-job *ngFor=\\\"let job of jobs; let i = index\\\" [job]=\\\"job\\\" (delete)=\\\"removeJob(i)\\\"></js-job>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col s12 center-align \\\">\\n      <a class=\\\"js-full-width waves-effect waves-light btn-large deep-purple darken-1\\\" (click)=\\\"addJob()\\\">Add Job</a>\\n    </div>\\n  </div>\\n</main>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/job-dashboard/job-dashboard.component.html\n// module id = 545\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col s12 js-border\\\">\\n\\n\\n    <!-- Job name -->\\n    <div class=\\\"input-field col s12\\\">\\n      <h6 *ngIf=\\\"!isEditMode\\\">{{job.name}}</h6>\\n      <input *ngIf=\\\"isEditMode\\\" type=\\\"text\\\" value=\\\"{{job.name}}\\\" class=\\\"deep-purple-text text-darken-1\\\" (keyup)=\\\"updateName($event)\\\">\\n    </div>\\n    <hr class=\\\"js-grey-lighten-2\\\" />\\n\\n\\n    <!-- Job execution command -->\\n    <div class=\\\"input-field col s12\\\">\\n      <i class=\\\"material-icons prefix js-top-margin disabled\\\">attach_money</i>\\n      <input type=\\\"text\\\" placeholder=\\\"npm something\\\" value=\\\"{{job.command}}\\\" [ngClass]=\\\"{ 'deep-purple-text text-darken-1' : isEditMode }\\\" [disabled]=\\\"!isEditMode\\\">\\n    </div>\\n    <hr class=\\\"js-grey-lighten-2\\\" />\\n\\n\\n    <!-- Job options -->\\n    <div class=\\\"row section\\\">\\n      <div class=\\\"col s3\\\">\\n        <!-- container size job stacks -->\\n        <label for=\\\"container_size\\\">CONTAINER SIZE</label>\\n        <select id=\\\"container_size\\\" [disabled]=\\\"!isEditMode\\\">\\n          <option *ngFor=\\\"let size of containerSizes; let i = index;\\\" value=\\\"{{i}}\\\" [selected]=\\\"size.selected\\\">{{size.name}}</option>\\n        </select>\\n      </div>\\n      <div class=\\\"col s3\\\">\\n         <!-- container size job stacks -->\\n        <label for=\\\"container_size\\\">FREQUENCY</label>\\n        <select id=\\\"container_size\\\" [disabled]=\\\"!isEditMode\\\">\\n          <option *ngFor=\\\"let fre of frequency; let i = index;\\\" value=\\\"{{i}}\\\" [selected]=\\\"fre.selected\\\">{{fre.name}}</option>\\n        </select>\\n      </div>\\n      <div class=\\\"col s3\\\">\\n        <label for=\\\"container_size\\\">LAST RUN</label>\\n        <h6>{{lastRun}}</h6>\\n      </div>\\n      <div class=\\\"col s3\\\">\\n        <label for=\\\"container_size\\\">NEXT RUN</label>\\n        <h6>{{jobDate | date}}</h6>\\n        <select [disabled]=\\\"!isEditMode\\\">\\n          <option *ngFor=\\\"let time of militaryTimes\\\" value=\\\"{{time}}\\\">{{time}} UTC</option>\\n        </select>\\n      </div>\\n    </div>\\n    <hr class=\\\"js-grey-lighten-2\\\" />\\n\\n\\n    <!-- Job save, edit, remove -->\\n    <div class=\\\"section right-align\\\">\\n      <div class=\\\"js-btn-section\\\" *ngIf=\\\"!isEditMode\\\">\\n        <a class=\\\"waves-effect waves-light btn deep-purple darken-1\\\" (click)=\\\"activateEditMode()\\\">Edit</a>\\n        <a class=\\\"waves-effect waves-light\\\" (click)=\\\"removeJob()\\\">Remove</a>\\n      </div>\\n      <div class=\\\"js-btn-section\\\" *ngIf=\\\"isEditMode\\\">\\n        <a class=\\\"waves-effect waves-light btn deep-purple darken-1\\\" (click)=\\\"activateEditMode()\\\">Save</a>\\n        <a class=\\\"waves-effect waves-light\\\" (click)=\\\"activateEditMode()\\\">Cancel</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/job-dashboard/job/job.component.html\n// module id = 546\n// module chunks = 1"],"sourceRoot":""}